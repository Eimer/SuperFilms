{"version":3,"sources":["Components/Header.js","Components/StartPage/Calendar.js","Components/StartPage/StartPage.js","Components/ContentPage/UpperBlock.js","Components/ContentPage/FilmItem.js","Components/ContentPage/ShowMore.js","Components/ContentPage/FilmsBlock.js","Components/ContentPage/ContentPage.js","Components/App.js","index.js"],"names":["Header","Component","CalendarBlock","props","useState","Date","value","Calendar","onChange","date","handleChangePage","resultFormattedDate","notFormattedDate","year","getFullYear","month","getMonth","getDate","getFormattedDate","MiddleBlock","className","src","alt","StartPage","this","UpperBlock","formattedDate","chosenDate","substr","FilmItem","srcImg","image","medium","altImage","name","premiered","season","episode","ShowMore","changeQuantityFilms","buttonText","fullList","lenthListFilms","onClick","FilmsBlock","createFilmsList","filmList","filmsList","map","i","_embedded","show","number","lengthListFilms","length","slice","window","scrollTo","FilmList","ContentPage","backToFirstPage","state","setState","getNeededFilms","data","filteredData","item","airdate","push","allFilms","App","pageIndex","currentDate","fetch","then","res","json","catch","err","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe155844.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <span>SUPER FILM</span>\n      </header>\n    );\n  }\n}\n\nexport default Header;","import React, {useState} from 'react';\nimport {Calendar} from \"react-calendar\";\n\nlet getFormattedDate = (value) => {\n  let resultFormattedDate = \"\"\n  let notFormattedDate = {\n    year: value.getFullYear(),\n    month: value.getMonth() + 1,\n    date: value.getDate(),\n  }\n\n  if (notFormattedDate.month < 10)\n    notFormattedDate.month = '0' + notFormattedDate.month\n  if (notFormattedDate.date < 10)\n    notFormattedDate.date = '0' + notFormattedDate.date\n  resultFormattedDate += notFormattedDate.year + '-' + notFormattedDate.month + '-' + notFormattedDate.date\n  return resultFormattedDate;\n}\n\nexport function CalendarBlock(props) {\n  const [value, onChange] = useState(new Date());\n\n  let chooseDate = (date) => {\n    props.handleChangePage(2, getFormattedDate(date));\n  }\n\n  return (\n    <div>\n      <Calendar\n        onChange={chooseDate}\n        value={value}\n        // onClickDay={chooseDate}\n      />\n    </div>\n  );\n}\n","import React, {Component} from 'react';\nimport Header from \"../Header\";\nimport {CalendarBlock} from \"./Calendar\";\n\nfunction MiddleBlock () {\n  return (\n    <div className={\"middle-block\"}>\n      <img src=\"./assets/images/tv.svg\" alt=\"Error_img\"/>\n      <br/>\n      <span>Для получения списка сериалов,<br/>\n      пожалуйста, выберите<br/>\n      необходимый месяц и день\n      </span>\n    </div>\n  )\n}\n\nclass StartPage extends Component {\n  render() {\n    return (\n      <div className={\"start-page\"}>\n        <Header/>\n        <MiddleBlock/>\n        <CalendarBlock\n          handleChangePage = {this.props.handleChangePage}\n        />\n      </div>\n    );\n  }\n}\n\nexport default StartPage;","import React, {Component} from 'react';\n\nclass UpperBlock extends Component {\n\n  getFormattedDate = () => {\n    let formattedDate = \"\";\n\n    formattedDate += this.props.chosenDate.substr(8,2)\n    formattedDate += ' '\n    switch (this.props.chosenDate.substr(5,2)) {\n      case \"01\":\n        formattedDate += \"Января\"\n        break;\n      case \"02\":\n        formattedDate += \"Февраля\"\n        break;\n      case \"03\":\n        formattedDate += \"Марта\"\n        break;\n      case \"04\":\n        formattedDate += \"Апреля\"\n        break;\n      case \"05\":\n        formattedDate += \"Мая\"\n        break;\n      case \"06\":\n        formattedDate += \"Июня\"\n        break;\n      case \"07\":\n        formattedDate += \"Июля\"\n        break;\n      case \"08\":\n        formattedDate += \"Августа\"\n        break;\n      case \"09\":\n        formattedDate += \"Сентября\"\n        break;\n      case \"10\":\n        formattedDate += \"Октября\"\n        break;\n      case \"11\":\n        formattedDate += \"Ноября\"\n        break;\n      case \"12\":\n        formattedDate += \"Декабря\"\n        break;\n    }\n    formattedDate += ' '\n    formattedDate += this.props.chosenDate.substr(0,4)\n    return formattedDate;\n  }\n\n\n  render() {\n    return (\n      <div className={\"upper-block\"}>\n        <span className={\"date-value\"}>{this.getFormattedDate()}</span>\n      </div>\n    );\n  }\n}\n\nexport default UpperBlock;","import React, {Component} from 'react';\n\nexport class FilmItem extends Component {\n  render() {\n    let srcImg = \"\"\n    if (this.props.image)\n      srcImg = this.props.image.medium\n    else {\n      srcImg = this.props.altImage\n    }\n    return (\n      <div className={\"film-item\"}>\n        <div className={\"img-block\"}>\n          <img src={srcImg} alt=\"\"/>\n        </div>\n        <div className={\"film-info\"}>\n          <div>\n            <span>{this.props.name}</span>\n            <span>{this.props.premiered.substr(0,4)}</span>\n          </div>\n          <button className={\"film-desc\"}>\n            <span>Cезон: {this.props.season}</span>\n            <span>Эпизод: {this.props.episode}</span>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\n\nexport class ShowMore extends Component {\n  constructor() {\n    super();\n    this.buttonText = ''\n  }\n  changeQuantityFilms = () => {\n    this.props.changeQuantityFilms()\n  }\n\n  render() {\n    if (!this.props.fullList)\n      this.buttonText = 'Показать еще +' + this.props.lenthListFilms\n    else\n      this.buttonText = 'Показать основные'\n    return (\n      <button className={\"show-more\"} onClick={this.changeQuantityFilms}>\n        {this.buttonText}\n      </button>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {FilmItem} from \"./FilmItem\";\nimport {ShowMore} from \"./ShowMore\";\n\nclass FilmsBlock extends Component {\n  constructor(props) {\n    super(props);\n    this.lengthListFilms = 0;\n  }\n\n\n  createFilmsList = () => {\n      let filmList = this.props.filmsList.map((value, i) =>\n        <FilmItem\n          key={i}\n          image={value._embedded.show.image}\n          altImage={\"assets/images/error-img.svg\"}\n          name={value._embedded.show.name}\n          premiered={value._embedded.show.premiered}\n          season={value.season}\n          episode={value.number}\n        />\n      );\n\n    if (!this.props.fullList) {\n      this.lengthListFilms = filmList.length - 5;\n      return filmList.slice(0, 5)\n    }\n    else\n      return filmList\n  }\n\n  render() {\n    window.scrollTo(0, 0)\n    const FilmList = this.createFilmsList();\n    return (\n      <div className={\"films-block\"}>\n        {FilmList}\n        <ShowMore\n          changeQuantityFilms={this.props.changeQuantityFilms}\n          lenthListFilms={this.lengthListFilms}\n          fullList={this.props.fullList}\n        />\n      </div>\n    );\n  }\n}\n\nexport default FilmsBlock;","import React, {Component} from 'react';\nimport Header from \"../Header\";\nimport UpperBlock from \"./UpperBlock\";\nimport FilmsBlock from \"./FilmsBlock\";\n\n\nexport class ContentPage extends Component {\n\n  backToFirstPage = () => {\n    this.props.handleChangePage(1);\n  }\n\n  changeQuantityFilms = () => {\n    if (!this.state.fullList) {\n      this.setState({\n        fullList: true\n      })\n    }\n    else {\n      this.setState({\n        fullList: false\n      })\n    }\n  }\n\n  constructor() {\n    super();\n    this.state = {\n      fullList: false\n    }\n  }\n  getNeededFilms = (data) => {\n    let filteredData = []\n    data.map((item) => {\n      if (item.airdate === this.props.date) {\n        filteredData.push(item)\n      }\n    })\n  return filteredData\n  }\n\n  render() {\n    let filmsList = this.getNeededFilms(this.props.data);\n    if (filmsList.length > 0) {\n      return (\n        <div className={\"content-page\"}>\n          <Header/>\n          <UpperBlock\n            chosenDate={this.props.date}\n          />\n          <FilmsBlock\n            data={this.props.data}\n            filmsList={filmsList}\n            allFilms={this.props.allFilms}\n            changeQuantityFilms={this.changeQuantityFilms}\n            fullList={this.state.fullList}\n          />\n          <button className={\"back-btn\"} onClick={this.backToFirstPage}>&lsaquo;</button>\n        </div>\n      );\n    }\n    else {\n      return (\n        <div className={\"content-page\"}>\n          <Header/>\n          <UpperBlock\n            chosenDate={this.props.date}\n          />\n          <div className={\"no-films\"}>\n            <img src=\"./assets/images/tv.svg\" alt=\"Error_img\"/>\n            <span>Извините, нет премьер<br/>на на эту дату</span>\n          </div>\n          <button className={\"back-btn\"} onClick={this.backToFirstPage}>&lsaquo;</button>\n        </div>\n      )\n    }\n  }\n}\n","import '../App.css';\nimport React, {Component} from 'react';\nimport StartPage from \"./StartPage/StartPage\";\nimport {ContentPage} from \"./ContentPage/ContentPage\";\n\nexport class App extends Component {\n  constructor() {\n    super();\n    this.state= {\n      pageIndex: 1,\n      currentDate: \"\",\n      allFilms: false\n    }\n  }\n  componentDidMount() {\n    fetch(\"http://api.tvmaze.com/schedule/full\")\n      .then((res) => {\n        res.json().then((data) => {\n          this.setState({\n            data:data,\n            pageIndex: 1\n          })\n        })\n      }\n      ).catch((err) => {\n        console.log(err);\n      })\n  }\n\n  handleChangePage = (pageIndex, currentDate) => {\n      this.setState( {\n        pageIndex: pageIndex,\n        currentDate: currentDate\n      })\n  }\n\n  render() {\n    if (this.state.pageIndex === 1) {\n      return (\n          <StartPage\n            handleChangePage={this.handleChangePage}\n          />\n      );\n    }\n    else {\n      return (\n        <ContentPage\n          data={this.state.data}\n          date={this.state.currentDate}\n          allFilms={this.state.allFilms}\n          handleChangePage={this.handleChangePage}\n        />\n      )\n    }\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './Components/App';\nimport 'react-calendar/dist/Calendar.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}